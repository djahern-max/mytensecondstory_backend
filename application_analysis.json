{
  "generated_at": "2025-05-31T14:40:39.381299",
  "application_name": "MyTenSecondStory Backend",
  "structure": {
    "name": "app",
    "type": "directory",
    "children": [
      {
        "name": "api",
        "type": "directory",
        "children": [
          {
            "name": "dependencies.py",
            "type": "file",
            "children": []
          },
          {
            "name": "routes",
            "type": "directory",
            "children": [
              {
                "name": "ai_enhancement.py",
                "type": "file",
                "children": []
              },
              {
                "name": "auth.py",
                "type": "file",
                "children": []
              },
              {
                "name": "users.py",
                "type": "file",
                "children": []
              },
              {
                "name": "videos.py",
                "type": "file",
                "children": []
              }
            ]
          }
        ]
      },
      {
        "name": "core",
        "type": "directory",
        "children": [
          {
            "name": "config.py",
            "type": "file",
            "children": []
          },
          {
            "name": "security.py",
            "type": "file",
            "children": []
          }
        ]
      },
      {
        "name": "db",
        "type": "directory",
        "children": [
          {
            "name": "base.py",
            "type": "file",
            "children": []
          },
          {
            "name": "session.py",
            "type": "file",
            "children": []
          }
        ]
      },
      {
        "name": "main.py",
        "type": "file",
        "children": []
      },
      {
        "name": "models",
        "type": "directory",
        "children": [
          {
            "name": "user.py",
            "type": "file",
            "children": []
          }
        ]
      },
      {
        "name": "schemas",
        "type": "directory",
        "children": [
          {
            "name": "user.py",
            "type": "file",
            "children": []
          }
        ]
      },
      {
        "name": "services",
        "type": "directory",
        "children": [
          {
            "name": "ai_service.py",
            "type": "file",
            "children": []
          },
          {
            "name": "auth.py",
            "type": "file",
            "children": []
          },
          {
            "name": "background_enhancer.py",
            "type": "file",
            "children": []
          }
        ]
      },
      {
        "name": "utils",
        "type": "directory",
        "children": [
          {
            "name": "__init__.py",
            "type": "file",
            "children": []
          },
          {
            "name": "ai_client.py",
            "type": "file",
            "children": []
          }
        ]
      }
    ]
  },
  "models": {
    "user": {
      "content": "[33 lines of code]",
      "classes": [
        "OAuthProvider",
        "User"
      ],
      "functions": [],
      "imports": [
        "sqlalchemy.Boolean",
        "sqlalchemy.Column",
        "sqlalchemy.String",
        "sqlalchemy.Integer",
        "sqlalchemy.DateTime",
        "sqlalchemy.ForeignKey",
        "sqlalchemy.Enum",
        "sqlalchemy.sql.func",
        "enum",
        "app.db.session.Base",
        "uuid"
      ],
      "lines": 33
    }
  },
  "routes": {
    "auth": {
      "content": "[106 lines of code]",
      "classes": [],
      "functions": [],
      "imports": [
        "fastapi.APIRouter",
        "fastapi.Depends",
        "fastapi.HTTPException",
        "fastapi.status",
        "fastapi.Body",
        "fastapi.security.OAuth2PasswordRequestForm",
        "sqlalchemy.orm.Session",
        "jose.jwt",
        "jose.JWTError",
        "pydantic.ValidationError",
        "app.api.dependencies.get_db",
        "app.core.config.settings",
        "app.schemas.user.User",
        "app.schemas.user.Token",
        "app.schemas.user.TokenPayload",
        "app.schemas.user.UserCreate",
        "app.services.auth.auth_service",
        "app.models.user.User",
        "app.models.user.OAuthProvider",
        "app.core.security.get_password_hash"
      ],
      "lines": 106
    },
    "users": {
      "content": "[40 lines of code]",
      "classes": [],
      "functions": [
        "read_user_me",
        "read_user",
        "read_users"
      ],
      "imports": [
        "fastapi.APIRouter",
        "fastapi.Depends",
        "fastapi.HTTPException",
        "fastapi.status",
        "sqlalchemy.orm.Session",
        "typing.List",
        "typing.Any",
        "app.api.dependencies.get_db",
        "app.api.dependencies.get_current_user",
        "app.api.dependencies.get_current_active_superuser",
        "app.models.user.User",
        "app.schemas.user.User",
        "app.schemas.user.UserCreate"
      ],
      "lines": 40
    },
    "ai_enhancement": {
      "content": "[462 lines of code]",
      "classes": [
        "VideoGenerationRequest",
        "VideoEnhancementRequest",
        "QualityEnhancementRequest"
      ],
      "functions": [],
      "imports": [
        "logging",
        "fastapi.APIRouter",
        "fastapi.Depends",
        "fastapi.HTTPException",
        "fastapi.BackgroundTasks",
        "fastapi.UploadFile",
        "fastapi.File",
        "sqlalchemy.orm.Session",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.List",
        "pydantic.BaseModel",
        "app.services.ai_service.ai_service",
        "app.core.ai_config.VEO_PROMPT_TEMPLATES",
        "app.core.ai_config.VEO_BACKGROUND_SETTINGS",
        "app.core.constants.AI_BACKGROUNDS",
        "app.services.background_enhancer.background_removal_service",
        "tempfile",
        "os",
        "app.services.background_enhancer.background_removal_service",
        "app.services.ai_service.ai_service",
        "tempfile",
        "os",
        "os",
        "uuid"
      ],
      "lines": 462
    },
    "videos": {
      "content": "[58 lines of code]",
      "classes": [],
      "functions": [],
      "imports": [
        "fastapi.APIRouter",
        "fastapi.Depends",
        "fastapi.HTTPException",
        "fastapi.UploadFile",
        "fastapi.File",
        "fastapi.responses.FileResponse",
        "sqlalchemy.orm.Session",
        "tempfile",
        "os",
        "pathlib.Path",
        "app.api.dependencies.get_db",
        "app.api.dependencies.get_current_active_user",
        "app.models.user.User",
        "app.services.background_enhancer.background_removal_service"
      ],
      "lines": 58
    }
  },
  "services": {
    "auth": {
      "content": "[111 lines of code]",
      "classes": [
        "AuthService"
      ],
      "functions": [
        "authenticate_user",
        "create_tokens"
      ],
      "imports": [
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "httpx",
        "sqlalchemy.orm.Session",
        "fastapi.HTTPException",
        "fastapi.status",
        "datetime.timedelta",
        "app.core.config.settings",
        "app.core.security.create_access_token",
        "app.core.security.create_refresh_token",
        "app.core.security.get_password_hash",
        "app.core.security.verify_password",
        "app.models.user.User",
        "app.models.user.OAuthProvider",
        "app.schemas.user.UserCreate",
        "app.schemas.user.UserOAuthCreate"
      ],
      "lines": 111
    },
    "ai_service": {
      "content": "[357 lines of code]",
      "classes": [
        "AIEnhancementService"
      ],
      "functions": [
        "__init__",
        "_map_background_type"
      ],
      "imports": [
        "asyncio",
        "logging",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "typing.List",
        "datetime.datetime",
        "datetime.timedelta",
        "app.core.ai_config.ai_settings",
        "app.core.ai_config.VEO_PROMPT_TEMPLATES",
        "app.core.ai_config.VEO_BACKGROUND_SETTINGS",
        "app.utils.ai_client.veo_client",
        "app.core.constants.AI_BACKGROUNDS",
        "app.core.constants.ENHANCEMENT_STATUS",
        "openai",
        "os"
      ],
      "lines": 357
    },
    "background_enhancer": {
      "content": "[214 lines of code]",
      "classes": [
        "BackgroundRemovalService"
      ],
      "functions": [
        "__init__",
        "get_video_info"
      ],
      "imports": [
        "os",
        "cv2",
        "numpy",
        "typing.Optional",
        "typing.Tuple",
        "tempfile",
        "logging",
        "pathlib.Path",
        "asyncio",
        "datetime.datetime",
        "rembg.remove",
        "rembg.new_session",
        "ffmpeg",
        "shutil"
      ],
      "lines": 214
    }
  },
  "schemas": {
    "user": {
      "content": "[46 lines of code]",
      "classes": [
        "UserBase",
        "UserCreate",
        "UserOAuthCreate",
        "User",
        "Token",
        "TokenPayload",
        "Config"
      ],
      "functions": [],
      "imports": [
        "pydantic.BaseModel",
        "pydantic.EmailStr",
        "pydantic.validator",
        "typing.Optional",
        "datetime.datetime",
        "app.models.user.OAuthProvider"
      ],
      "lines": 46
    }
  },
  "dependencies": [
    "alembic==1.10.4",
    "annotated-types==0.7.0",
    "anyio==4.9.0",
    "attrs==25.3.0",
    "bcrypt==4.0.1",
    "boto3==1.26.165",
    "botocore==1.29.165",
    "cachetools==5.5.2",
    "certifi==2025.4.26",
    "charset-normalizer==3.4.2",
    "click==8.2.1",
    "coloredlogs==15.0.1",
    "distro==1.9.0",
    "dnspython==2.7.0",
    "docstring_parser==0.16",
    "ecdsa==0.19.1",
    "email-validator==2.0.0.post2",
    "fastapi==0.115.12",
    "ffmpeg-python==0.2.0",
    "flatbuffers==25.2.10",
    "future==1.0.0",
    "google-api-core==2.24.2",
    "google-auth==2.40.2",
    "google-cloud-aiplatform==1.95.1",
    "google-cloud-bigquery==3.34.0",
    "google-cloud-core==2.4.3",
    "google-cloud-resource-manager==1.14.2",
    "google-cloud-storage==2.19.0",
    "google-crc32c==1.7.1",
    "google-genai==1.17.0",
    "google-resumable-media==2.7.2",
    "googleapis-common-protos==1.70.0",
    "grpc-google-iam-v1==0.14.2",
    "grpcio==1.73.0rc1",
    "grpcio-status==1.73.0rc1",
    "h11==0.16.0",
    "httpcore==1.0.9",
    "httpx==0.28.1",
    "humanfriendly==10.0",
    "idna==3.10",
    "imageio==2.37.0",
    "jiter==0.10.0",
    "jmespath==1.0.1",
    "jsonschema==4.24.0",
    "jsonschema-specifications==2025.4.1",
    "lazy_loader==0.4",
    "llvmlite==0.44.0",
    "Mako==1.3.10",
    "MarkupSafe==3.0.2",
    "mpmath==1.3.0",
    "networkx==3.5",
    "numba==0.61.2",
    "numpy==2.2.6",
    "onnxruntime==1.22.0",
    "openai==1.82.1",
    "opencv-python==4.11.0.86",
    "opencv-python-headless==4.11.0.86",
    "packaging==25.0",
    "passlib==1.7.4",
    "pillow==11.2.1",
    "platformdirs==4.3.8",
    "pooch==1.8.2",
    "proto-plus==1.26.1",
    "protobuf==6.31.1",
    "psycopg2-binary==2.9.10",
    "pyasn1==0.6.1",
    "pyasn1_modules==0.4.2",
    "pydantic==1.10.22",
    "pydantic_core==2.33.2",
    "PyMatting==1.1.14",
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.0.1",
    "python-jose==3.3.0",
    "python-multipart==0.0.20",
    "referencing==0.36.2",
    "rembg==2.0.66",
    "requests==2.32.3",
    "rpds-py==0.25.1",
    "rsa==4.9.1",
    "s3transfer==0.6.2",
    "scikit-image==0.25.2",
    "scipy==1.15.3",
    "shapely==2.1.1",
    "six==1.17.0",
    "sniffio==1.3.1",
    "SQLAlchemy==2.0.41",
    "starlette==0.46.2",
    "stripe==5.4.0",
    "sympy==1.14.0",
    "tifffile==2025.5.26",
    "tqdm==4.67.1",
    "typing-inspection==0.4.1",
    "typing_extensions==4.13.2",
    "urllib3==1.26.20",
    "uvicorn==0.21.1",
    "websockets==15.0.1"
  ],
  "configuration": {
    "config": {
      "content": "[54 lines of code]",
      "classes": [
        "Settings",
        "Config"
      ],
      "functions": [
        "assemble_cors_origins"
      ],
      "imports": [
        "pydantic.BaseSettings",
        "pydantic.PostgresDsn",
        "pydantic.validator",
        "typing.List",
        "typing.Optional",
        "typing.Union",
        "typing.Dict",
        "typing.Any",
        "os",
        "dotenv.load_dotenv"
      ],
      "lines": 54
    },
    "security": {
      "content": "[33 lines of code]",
      "classes": [],
      "functions": [
        "create_access_token",
        "create_refresh_token",
        "verify_password",
        "get_password_hash"
      ],
      "imports": [
        "datetime.datetime",
        "datetime.timedelta",
        "typing.Any",
        "typing.Union",
        "typing.Optional",
        "jose.jwt",
        "passlib.context.CryptContext",
        "app.core.config.settings"
      ],
      "lines": 33
    }
  },
  "database_tables": [],
  "main_application": {
    "content": "from fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware\nfrom fastapi.responses import JSONResponse, PlainTextResponse\nfrom fastapi.routing import APIRoute\nfrom app.api.routes import auth, users\nfrom app.api.routes.videos import router as videos_router\nfrom app.core.config import settings\n\napp = FastAPI(\n    title=settings.PROJECT_NAME,\n    openapi_url=f\"{settings.API_V1_STR}/openapi.json\",\n)\n\n# Set all CORS enabled origins\nif settings.BACKEND_CORS_ORIGINS:\n    app.add_middleware(\n        CORSMiddleware,\n        allow_origins=[str(origin) for origin in settings.BACKEND_CORS_ORIGINS],\n        allow_credentials=True,\n        allow_methods=[\"*\"],\n        allow_headers=[\"*\"],\n    )\n\n# Include routers\napp.include_router(auth.router, prefix=f\"{settings.API_V1_STR}/auth\", tags=[\"auth\"])\napp.include_router(users.router, prefix=f\"{settings.API_V1_STR}/users\", tags=[\"users\"])\napp.include_router(videos_router, prefix=f\"{settings.API_V1_STR}/videos\", tags=[\"videos\"])\n\n@app.get(\"/\")\nasync def root():\n    return {\"message\": \"Welcome to MyTenSecondStory API\"}\n\n@app.get(\"/health\")\nasync def health_check():\n    return JSONResponse(content={\"status\": \"ok\"})\n\n@app.get(\"/routes-simple\", response_class=PlainTextResponse)\nasync def get_routes_simple():\n    \"\"\"\n    Returns a concise list of all routes with their paths and methods.\n    \"\"\"\n    routes = []\n    for route in app.routes:\n        if isinstance(route, APIRoute):\n            methods = \", \".join(route.methods)\n            routes.append(f\"{methods}: {route.path}\")\n    return \"\\n\".join(routes)\n",
    "classes": [],
    "functions": [],
    "imports": [
      "fastapi.FastAPI",
      "fastapi.middleware.cors.CORSMiddleware",
      "fastapi.responses.JSONResponse",
      "fastapi.responses.PlainTextResponse",
      "fastapi.routing.APIRoute",
      "app.api.routes.auth",
      "app.api.routes.users",
      "app.api.routes.videos.router",
      "app.core.config.settings"
    ],
    "lines": 48
  }
}